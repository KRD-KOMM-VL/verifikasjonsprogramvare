/**
 * Zero-Knowledge Protocols for E-Vote (ZKPEV).
 *
 * Copyright Â© 2013, The Norwegian Ministry of Local Government and Regional
 * Development (KRD).
 *
 * This file is part of ZKPEV.
 *
 * ZKPEV is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * ZKPEV is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You can find a copy of the GNU General Public License in
 * /src/site/resources/gpl-3.0-standalone.html. Otherwise, see also
 * http://www.gnu.org/licenses/.
 */
package com.computas.zkpev.cleansing;

import com.computas.zkpev.ResultsArrayList;
import com.computas.zkpev.ResultsList;
import static org.testng.Assert.assertEquals;
import static org.testng.Assert.assertTrue;

import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import java.math.BigInteger;


/**
 * Unit tests on VcsEncryptedVotesHashMap.
 *
 * @version $Id: VcsEncryptedVotesHashMapUnitTest.java 11011 2011-10-20 08:26:55Z fvl $
 */
public class VcsEncryptedVotesHashMapUnitTest {
    private static final String COMMA = ",";
    private static final String ENC_VOTE_OPT_IDS = "MTMxOTQ3Njc3NjczMTYyMzYxNzM4MTk0Mzg1NTQ3ODEzMjEzMDI5NTIzMTgyMjQyNjkwNzM0Nzg1MTU2NjQ1NzM1NTc5Nzg3ODMzMDUzMzc4MzE3NTQyMjI1ODgyNDk4NDUyNjQyMTQ0NjI3NTg1MTQ2Mjk5MDI5MzEyNTkxMzM0MzE0MjE3NDQyNTgzNzQwMTQ4MjEzOTQ0NTA3NDM4MDk2NjQ4MDg0MDAwODM3OTQ3ODU1MDEyNTkyNDk0MjA5OTcwMjI3MjI5ODIwNzkzMDg0NzM1NzAzMjU4MzExMDU1NTU5Nzk1MDI3NjQyNDE2NDkzNzA5MjMyNDk0OTA4NTMzMTQwMDc3NzQ0MTUyNzYyNTU2Mzk0MzczMDYyNDI2NDQ0MTU4ODYxNzg1MzI2NjY1NDI4MzY5MjkwMDE1OTgwODI3NzgwNjUwNjE2ODA3NTAzNjg2MzQwNDc1NDIyMjc3OTM2MTQwNjIwMzkwNjA0NjgyMjg5MDU2OTEyMzIzNzc3NDkyNTk4NjE2NzYyNzk1MjY2MDI5OTg3NzIzODI4NDEwODExODY1MDI4OTM4MzMxMzAxNzUzMjUwMDQ1NTExMDUyMTIwNTk1MDQyMTE1MDkzODA5OTM2NzMwODE1OTI3MzQ1MzQ3NzUzNTUwNzUzOTcxMTExODIyOTU2NzEwMTU1ODAwNjA2MzQwMTI1MjQ5NzE5MTgwMjIzNDg5ODQ0MzY2OTEzMDgwNDMwMTQ4OTUxNzc2OTkxOTAxNzA4NTQ2ODQxNzE2MjQ2OTc1ODgwMTY5MDM0MzAzOTczMDY0ODE4ODU1Njd8MjAwNTYwOTE0ODEzOTg2NjI3MzU5NDEzOTk0MTA3ODgzNzExNTg3MzA3NDEzMDg0NDY0NDA2NDEzODAwOTk4NzMyMjgwNzczNjAxMzUyNjE1MzgwNjg3Nzg0OTk2NDI1MjA1MjQ3NTE3OTE5OTgwOTk3OTc3MDc2MDg1MTk3MzM3MjQ5Nzc4NTkyNDUwNzE5MTQzNDkyMTE2Mjc4NjU3MTQ1NjQzMzUzOTg3NjEwODQ4NjIwMjc2MzkxNzcwNjY0ODYyOTk5NTQ2NDYyNTgyNDgwMDQ3MzM4OTcwMTA4NDE3NDc3NjY5ODA3ODcyMjQ5MzAxMzcyMjkxMDkwMzc1NDEwMjgxODUwNDk1NTAwMDc0NTQ3NDk0Njc0NDU3NTI1MjM3ODQ1NTMwNjY4MjgxNDA0NDY2MTY5NTgyNTAzNDU2NDgxNzk3ODcxMTQzNzY3NjE0MzE1ODg4MTAwMjk1MzcxMTYzODI1NDkyODM4NzkyNTQyODEwNzEwNzg1NTM2NDMyOTgwNzU2NDU1OTU0NTc2ODY5MjU0MDIwMzU0NzMxNTI4NzA4MTg0NjYyMDkzMjY0NDU2Njk5MzQ0MjA0MTczOTQ4Mzk1ODk3MzE1OTQzNjQyOTE4NTU4ODMzMTAyMDQ4ODExNDUyNjU4MDAwODc5Nzg0MDYwMTQzOTQ4NjA3MDk5NTczNzI2NjI4NzcyNDE3ODgxNjQzMTMzNzY4NjM1NjQwNjg5MzczMjQ1NTk2NTYyOTU4OTUwOTMyOTUwNjAzNDIzMjE5MzI4MjU2OTQzMDY1NTA4NjkyOTE1OTUzNzE1OTIzNjc=#";
    private static final String CONTEST_ID = "000004";
    private static final String ELECTION_ID = "01";
    private static final String ELECTION_EVENT_ID = "999902";
    private static final String UUID = "4028806a2fda69fd012fda7a46b10012";
    private static final String AUTH_TOKEN = "rO0ABXNyADtjb20uc2N5dGwuZXZvdGUucHJvdG9jb2wuaW50ZWdyYXRpb24udm90aW5nLm1vZGVsLkF1dGhUb2tlbvz+Wz5pky7LAgATSgAFX2FzSWRJABhfZXhwaXJhdGlvblRpbWVJbk1pbnV0ZXNKAANfdHNbAA9fYXV0aFNlcnZpY2VTaWd0AAJbQkwACV9jb250ZXN0c3QAEExqYXZhL3V0aWwvTGlzdDtMABpfY29udHJvbGxlZFJldHVybmNvZGVzVHlwZXQAEkxqYXZhL2xhbmcvU3RyaW5nO0wAEF9lbGVjdGlvbkV2ZW50SWRxAH4AA0wAC19lbGVjdGlvbklkcQB+AANMAANfaWRxAH4AA0wACV9pbnRUb2tlbnQAQUxjb20vc2N5dGwvZXZvdGUvcHJvdG9jb2wvaW50ZWdyYXRpb24vdm90aW5nL21vZGVsL0ludGVybmFsVG9rZW47TAAXX2ludFRva2VuRW50aXR5UHJvdmlkZXJxAH4AA0wADV9wb2xsaW5nUGxhY2V0AEBMY29tL3NjeXRsL2V2b3RlL3Byb3RvY29sL2ludGVncmF0aW9uL3ZvdGluZy9tb2RlbC9Qb2xsaW5nUGxhY2U7TAAcX3VuY29udHJvbGxlZFJldHVybmNvZGVzVHlwZXEAfgADTAAKX3ZvdGVyQXJlYXEAfgADTAAMX3ZvdGVyQ29tbUlkcQB+AANMAA9fdm90ZXJGaXJzdE5hbWVxAH4AA0wAEF92b3RlcklkZW50aWZpZXJ0AENMY29tL3NjeXRsL2V2b3RlL3Byb3RvY29sL2ludGVncmF0aW9uL3ZvdGluZy9tb2RlbC9Wb3RlcklkZW50aWZpZXI7TAAOX3ZvdGVyTGFzdE5hbWVxAH4AA0wADF92b3RpbmdNb2Rlc3EAfgACeHAAAAAAAAAIAAAAAB4AAAEv2nmn4XVyAAJbQqzzF/gGCFTgAgAAeHAAAAEALWwj6PRNzzPhkIpBQ85NfJKKkayUOIRY51k+onz95FyzXwwNH/a/rupMUh1cIjCac2o+X3l2zxIn2h2C9HQtVeBJBCkJ9POELMlbGqh6gGvQxF3mx0FuOO0Eg8MQAIhFtm5QSBIOZF2DM3TZxJaAHTl9vuJfp6ME7BD1w7jMMZL54jUUD0+UHs91NOPqbq2ik8P4r3Cn7TNhe/GZa0kN81VIp4viD9hsQgRqArAk0MXrChE6qFXvFyA48f+h60X/9+rarZYBkbsQDg2/+lpa2Yu3fXuhRF3vQfgpDPRB4RxpNDN64n5Ab5+/m9VRyqnWeP5tVdMkiOyHMCghw4wvQHNyABNqYXZhLnV0aWwuQXJyYXlMaXN0eIHSHZnHYZ0DAAFJAARzaXpleHAAAAAUdwQAAAAZc3IAQGNvbS5zY3l0bC5ldm90ZS5wcm90b2NvbC5pbnRlZ3JhdGlvbi52b3RpbmcubW9kZWwuQWxsb3dlZENvbnRlc3QiWqLrfd15KQIAA0wACl9jb250ZXN0SWRxAH4AA0wAC19lbGVjdGlvbklkcQB+AANMAAZfdm90ZWRxAH4AA3hwdAAGMDAwMTAxdAACMDF0AAEwc3EAfgAMcQB+AA50AAIwMnEAfgAQc3EAfgAMcQB+AA50AAIwM3EAfgAQc3EAfgAMdAAGMDAwMTA2dAACMDRxAH4AEHNxAH4ADHQABjAwMDAwMXQAAjA1cQB+ABBzcQB+AAxxAH4AFnQAAjA2cQB+ABBzcQB+AAxxAH4AFnEAfgAPcQB+ABBzcQB+AAx0AAYwMDAwNDdxAH4AF3EAfgAQc3EAfgAMcQB+AA50AAIxMHEAfgAQc3EAfgAMcQB+ABlxAH4AD3EAfgAQc3EAfgAMdAADaWQ3dAADaWQ1cQB+ABBzcQB+AAx0AARpZDExcQB+ACVxAH4AEHNxAH4ADHQABGlkMTN0AARpZDE3cQB+ABBzcQB+AAx0AAJOT3QAAkVVcQB+ABBzcQB+AAxxAH4AD3QAAUZxAH4AEHNxAH4ADHQABDE1MDRxAH4AD3EAfgAQc3EAfgAMdAAEMDEwMXQAAUtxAH4AEHNxAH4ADHQABDAyMDJxAH4ANHEAfgAQc3EAfgAMdAAEOTAxOHEAfgAPcQB+ABBzcQB+AAx0AAQ5MDE5cQB+AA9xAH4AEHh0AAZTQ1JFRU50AAYyMDA3MDF0AANpZDV0ACRlZGI0NDNlMi1jYjZmLTRmNDEtYmZjMy1hNGUwYzFiODhiNGJzcgA8Y29tLnNjeXRsLmV2b3RlLnByb3RvY29sLmludGVncmF0aW9uLnZvdGluZy5tb2RlbC5NaW5JRFRva2Vu4NaSE2I5z6UCAARKAANfdHNMAANfaWRxAH4AA0wABV9pbmZvcQB+AANMAAhfdm90ZXJJZHEAfgADeHAAAAEv2nmdsHQAJGY0ZDZjYjYzLTI2ZDktNDg0OS04MDI1LWQxOWQ2NDJjNzQ2MHQAbyNUdWUgTWF5IDEwIDE3OjE0OjU1IENFU1QgMjAxMQ0KdXNlcklkPTAzMDE1MjAwMjQyDQp0cz0xMzA1MDQwNDk0MDAwDQppZD1mNGQ2Y2I2My0yNmQ5LTQ4NDktODAyNS1kMTlkNjQyYzc0NjANCnQACzAzMDE1MjAwMjQydAAMVVNFUlBBU1NXT1JEc3IAPmNvbS5zY3l0bC5ldm90ZS5wcm90b2NvbC5pbnRlZ3JhdGlvbi52b3RpbmcubW9kZWwuUG9sbGluZ1BsYWNl1/fPlAehz24CAAdMAA1fYWRkcmVzc0xpbmUxcQB+AANMAA1fYWRkcmVzc0xpbmUycQB+AANMAA1fYWRkcmVzc0xpbmUzcQB+AANMAAVfbmFtZXEAfgADTAANX29wZW5pbmdIb3Vyc3EAfgACTAAJX3Bvc3RUb3ducQB+AANMAAtfcG9zdGFsQ29kZXEAfgADeHB0AA5BZGRyZXNzIGxpbmUgMXQADkFkZHJlc3MgbGluZSAydAAOQWRkcmVzcyBsaW5lIDN0AAROYW1lc3EAfgAKAAAAA3cEAAAACnNyAD5jb20uc2N5dGwuZXZvdGUucHJvdG9jb2wuaW50ZWdyYXRpb24udm90aW5nLm1vZGVsLk9wZW5pbmdIb3Vyc+1QMq6vw1dtAgADTAAEX2RheXEAfgADTAAIX2VuZFRpbWVxAH4AA0wACl9zdGFydFRpbWVxAH4AA3hwdAALT3BlbmluZyBkYXl0ABBPcGVuaW5nIGVuZCB0aW1ldAAST3BlbmluZyBzdGFydCB0aW1lc3EAfgBMcQB+AE5xAH4AT3EAfgBQc3EAfgBMcQB+AE5xAH4AT3EAfgBQeHQACFBvc3RUb3dudAALUG9zdGFsIENvZGV0AANTTVN0ABgyMDA3MDEuNDAuNDAuNDAuMDAwMDAwLjF0AAR0cnVldAAFRHVtbXlzcgBBY29tLnNjeXRsLmV2b3RlLnByb3RvY29sLmludGVncmF0aW9uLnZvdGluZy5tb2RlbC5Wb3RlcklkZW50aWZpZXLKvqZX4QyCdgIAAkwACF9zcGFyZUlkcQB+AANMAAhfdm90ZXJJZHEAfgADeHB0AAswMzAxNTIwMDI0MnEAfgBbcQB+AFhzcQB+AAoAAAAUdwQAAAAZc3IARGNvbS5zY3l0bC5ldm90ZS5wcm90b2NvbC5pbnRlZ3JhdGlvbi52b3RpbmcubW9kZWwuRWxlY3Rpb25Wb3RpbmdNb2RllMcp1WIDaxECAAJMAAtfZWxlY3Rpb25JZHEAfgADTAALX3ZvdGluZ01vZGVxAH4AA3hwcQB+AA90AAEzc3EAfgBdcQB+ABJxAH4AX3NxAH4AXXEAfgAUcQB+AF9zcQB+AF1xAH4AF3EAfgBfc3EAfgBdcQB+ABpxAH4AX3NxAH4AXXEAfgAccQB+AF9zcQB+AF1xAH4AD3EAfgBfc3EAfgBdcQB+ABdxAH4AX3NxAH4AXXEAfgAhdAABM3NxAH4AXXEAfgAPcQB+AF9zcQB+AF1xAH4AJXEAfgBoc3EAfgBdcQB+ACVxAH4AaHNxAH4AXXEAfgAqcQB+AGhzcQB+AF1xAH4ALXEAfgBoc3EAfgBdcQB+AC9xAH4AaHNxAH4AXXEAfgAPcQB+AF9zcQB+AF1xAH4ANHEAfgBoc3EAfgBdcQB+ADRxAH4AaHNxAH4AXXEAfgAPcQB+AF9zcQB+AF1xAH4AD3EAfgBfeA==";
    private static final String AUTH_TOKEN_ID = "edb443e2-cb6f-4f41-bfc3-a4e0c1b88b4b";
    private static final String ENC_VOTE_SIG = "UjNoNWNsVnR2NFVGM1Y2ck1uUE1yUjFrWWxCem1hV2RueFRrMFJ1NHU1M0hneWM0M0h5T1VhRG1IMG5kbG4xQgo5Uy9MWE4yYm5JOExDNDMwYkpOZDhnUnpIRi9YWjJJR0dBeHYyWDF0b0w3VERtOUJ0Tk1mK0VtSkpwd1BJcnhNCjZBN1RJUldJY2kzQW1Yd29yWDlha3pCakxxSWpZUkRqbGZUaVlUSDFiTGMybEcxV2NndGFCSUZVUi9WZzJJb0QKNUZoR1pTVFpBZ0ZSVksvcDdneWFNai95Qm43RXE5Vit2Z1pZcmNWb2Nic3krVXBVOGljZE84SDcxTVB2bi9qRwpsTzdrNFRTK2wvbUtYb28wQi8zSUJvVDRDckFWeXV2aXFlUkF4cFBHdFN6MFBNNjFZWDgwMEFmcUZCRk9TNVJWClFzKzF4Zks2RGttczFMMXBtemxmUGc9PQ==";
    private static final String INTERNAL_AUTH_TOKEN_ID = "f4d6cb63-26d9-4849-8025-d19d642c7460";
    private static final long VOTE_TIMESTAMP = 1305040496609L;
    private static final String VOTE_Z_K_PROOF_SIG = "MjM1MzY2Nzc1MTc5NzY3OTIwNjgzODE3MzE4NTc3MTU2MDM5NDQ3OTQwMzgyMjk5OTUyMTU3MTMwOTk4MjY3NzM4MTM2MzM2NDQyNjF8bnVsbHwtMjE5NzI2MjUyMDQ2OTAyNDI1Nzc1ODQyOTU0OTY3MzM4MDQ0NDUzNDE4NzcxOTAzODM4ODIzMjY4ODk4NDgwODEzOTQ1OTIxODY2NTI0NTE3MDk4MDg2NzY4MDA2OTE3NTg0NDE4MDI0NTgyMzU1Njg0MzU4NTkyMjk0OTEwODkxOTAwMzUyNDM5NjM3MTk1MjM2MzY4NDcwMTgwODYxMjYzNjkyOTM2Njg1MDg5NDQ0NjEzNTkxODc3OTAzODYwMzAyNjkzNTM2OTQ4NjI0MzA4MTg2Mzg4NjY3NDg1Nzc0ODUzMTY4NjcwODc2NDEyMTk5Mjk2NTM2MzMzNDAzNTk3NTYzNDI0NTM5MTg1ODAxMzQ5NDQ3MDY2MjY5OTQ0MTA4OTQ4NTI4ODcwOTA5MTc3NjkyNTk5MTQwNTA5NTg4Nzc0MTE5NzQ5NDQwNjY5ODQ3NDU2Mjc3NDg5NzYyNTgzOTMxNTMzNDgzMDMwODEzOTMyOTkwMTM1MzIxNTUzNzcwNjA3MTY2NzY2ODQ4ODc0Mjk5OTMyOTA2ODA5NzU3NDEzODk1MjAzMzQzNjYzMjczMDgxMzQ0Njg0OTUxMTkxMzU2NjE4NTMyNDYzMTQxNDExMTM2ODEyMjY5MTM1MDI1MTQyNjgxNTY4OTU2MDM1OTMzNzYyODE2NDUxMDQ5NTEyOTIxODAxNDUyNTAwMDY2NDczNTgzMTA0MTQ2OTM0MzM0MzU0MDI1OTU1NzA4MTAxMzIyOTQ1NTgwNDQ1Njk1MjgzODIxNDI3NjQ1MDQzOTcwNjA1NjI3MzEwMzA3OTY4MTkyMjYxNDEwNjI4ODk4NTU4Mjk2MDA0MzM5Mjk1MzA0MDMyOTEzMjI3MTY4MzY5MDg3MDE5MjU2MzEzNTI5ODYzNzI2NjA2NDgyNDA4NDc0";
    private static final String VOTER_CERTIFICATE = "-----BEGIN CERTIFICATE-----#r##n#MIIDWTCCAkGgAwIBAgIFAI9U0jYwDQYJKoZIhvcNAQEFBQAwUjEbMBkGA1UECgwS#r##n#U2N5dGwgVU5JVCBURVNUIENBMQswCQYDVQQGEwJFUzESMBAGA1UEAwwJVU5JVCBU#r##n#RVNUMRIwEAYDVQQLDAlVTklUIFRFU1QwHhcNMTAwNTEwMTUwMjEwWhcNMjMwNTEw#r##n#MTUwMjEwWjB5MQwwCgYDVQQKDANPcmcxDjAMBgNVBAgMBVN0YXRlMRAwDgYDVQQG#r##n#EwdDb3VudHJ5MTgwNgYDVQQDDC9Wb3Rlcl9xTHZ5ekZhZVQ4TnMzRWppVjVvZ3gx#r##n#YmplY3c9X1NpZ25fXzIwMDcwMTENMAsGA1UECwwEVW5pdDCCASIwDQYJKoZIhvcN#r##n#AQEBBQADggEPADCCAQoCggEBALfZYnXFYoBLfKZTpW3Sf1xQpv6kKztSU8ZNiZ+z#r##n#Ppflv7eSd8SDq6dMIUA/PK4+2dDh+RCRo235puK6q7nTbO7rfQNUhKHdGF46ptdE#r##n#qP5BJxS9cl1aeRTuHJ2pOjwAeirO270/p6fDwAZLaZf+1X5wCzCl20VoXTTaHXUr#r##n#yIBwUMFGO3CQN81FZIHf0JGM/4fLSpaRCNk8hsKTgbaaY8MdERIXW0X0PtXjH7cy#r##n#B3F8U/dLPshdIgc2FThgdFjhquqPySd2+IVEF8DmbfmW6izBoizmiDSv2iWak0VU#r##n#+AWyjGLtgcbtvLDE0HMPXyNZ0/qitlN28DVNjli8sFMCMKUCAwEAAaMPMA0wCwYD#r##n#VR0PBAQDAgbAMA0GCSqGSIb3DQEBBQUAA4IBAQCZ4A7tJDyo6xwKGyIbrnlfZaL4#r##n#gHqsKArlDfePPwT++CtubD3inn42uNO2i6vzv4yrc2fLuESrD8Yijw0mqqAqdkrh#r##n#mu6Gxsxdku76kSlKqqHLxM/idlK/9d6Wayt9/Pkg/0nIdQZjkRrsbul39KBoqmLJ#r##n#5gCTFwY5PPjSDJJ7d/Wizm1Zk2Cg1/6bOTSmI30Avzezzqc37LJCJrBr+oOd3VRi#r##n#cq5P2c09fv19/PCyo+npkjEPuQ7AO2knCjgTJr/ECNMn0jdyg7e9Ffe/m2qqFjdv#r##n#343h04OJGBgmt/brv+kR5LL9as526OqQ6l4c+LM9G1p+XNuz2ErlScX+ZPsi#r##n#-----END CERTIFICATE-----";
    private static final String VOTER_ID = "03015200242";
    private static final String SAMPLE_LINE = UUID + COMMA + AUTH_TOKEN +
        COMMA + AUTH_TOKEN_ID + COMMA + ENC_VOTE_OPT_IDS + COMMA +
        ENC_VOTE_SIG + COMMA + INTERNAL_AUTH_TOKEN_ID + COMMA + VOTE_TIMESTAMP +
        COMMA + VOTE_Z_K_PROOF_SIG + COMMA + VOTER_CERTIFICATE +
        ",200701.47.02.0000.000000.0001," + CONTEST_ID + COMMA + ELECTION_ID +
        COMMA + ELECTION_EVENT_ID + COMMA + VOTER_ID +
        ",CHANNEL_ID_UNCONTROLLED";
    private static final String BROKEN_LINE = "*";
    private static final String OTHER_ENC_VOTE_OPT_IDS = "MjExOTM5NDU1NzI3MjI3MDI4ODgzMjI3NDgxODE0NjU3NzcyOTgzMjAyMDg3NDMxNTY3NjMxNzk0NzQzMTU4NTM1Njk1OTI2MjM0MzQ0MzgyODI2NTg1NTgxMzg3MTQ2NDMyMzEyNjc4MzMzODA1MDk1MDEyODIxODI0NTI1NDk5MDQ1OTUyNDA1MTQ3ODUxMzk0MDUwMTk0NTU5MTYyMDcwNjEzOTU1MDY0MzMzODAyMzk5MjA5MDIzMzMzNDgxOTE4MTAyMTg3MDQ1MDY1NDYxMzAxODQ0NjM4MDUxOTExNzUwMzI4OTc5ODY4NjYyOTI4MzkzNTMyNjUwNjUxNzkxOTM1MjE3MTk3NjkzNTU2NjMxOTcwMjY3MDgxNzcxODQxMjgwOTg0NzQyMzAxMjE0NTUwNjE2MjM4ODgwNDQ1MTQ4ODQ0MDgzNDIxOTE5NTE4MjQzMTY2NDA4NDE3MTAzOTUyOTY0MDUxMjA4NzgzNTM2MTYwODM1NDIxMzkyMDc5MTQ4ODk1NDE2MDEwOTIwNTE5MDU3ODMwOTc4MzYxMTQ4Njc5NDA5ODU3MDczNjMzODAxMzc2MzgxMTU5Mzg4MDMwOTg5ODM0NDg2NzY5Mzk1ODY4NjY5OTk2NDM0NjczNzUzNjM2NDA4NjAzOTIyMzA5MTIwMDgzNjQ3OTk1ODIxMjMxNDIyNjEzNjU1OTI5NTQyNjgyNjYxMzE1Mjg3OTY4NzYyODE0MzM2NTc4MzU5NTYzMDQ1MjMyNzI2MzcxMDQwNTcyNTg4MzQwNzc0OTE2MjEyODE2MTU5NTQyMTE5MTM5ODJ8MTk1MDYyMzQ5MDMwOTE3NDQxMTI3NjYwODkxODI1NzM5MDgyMDM5NjY3Mjc1MDc5NTA2MTk4OTcyNDA4MzY4MDc2NjE5MTA5MzY4OTI2MTc4OTU2MjE2MzU5NjI3Njg1MzMxNTk3NzUxNDEwMjg3NjkyODcxNTQ2NDg0NjA0Mzk3MTUxOTIwOTQ2NDYzMzA2OTEwNDk5Mzk1OTU2NzAzNDMxODUwODE3MDUyMDgzMzE1MjUxNzEwOTQ1OTUyNzQ5Mzk4MTY3OTY5ODA1NDExMzMxNzc3MjEzNzEzMDMyNDkxOTI5MjY1NjU2ODY3NjY2NzUzMzg2MzA5OTQ3MTYwNjAyNTIyMzQyODI2MjQyNzQ5NDUzMjg4OTQ0OTc1MjQxNTY4NjQ2NDE1NzY1MTYyODA2MzU2MTIyOTU4MTkwNTU5MDkxNzcxMTc3ODE1OTc1MTc3NzM2MTY3MTkzOTEwMzc3MjcyNTEwMzgxNDIyMjI0MTI3NjIyMTU0MjgyODAyMzYyNTAwNjU5MDkzODYwMDA2ODQ4Njk5MTUwNDkzMjg1NTQ0MTU0MTQwNDQ0NDczMzgwNzcyNzgyMTQxNjYyMzMxNTIwNzA1MTE2MTUwODE2NjIwMTUxMzA2OTU5MzY0MTI1NDY3MjEwMzI0ODk3NTg0MTk2MjkxNzM5NDM5NDUyMTQ3MTU0MDEyNDE0MjA2NDUyNzQ3NTYxMDEyNDk2ODE0NDkzMTAwODc0NDA5MDc2MTM3MDE4MDEwNzI0MzkyNzY0NDEzNDA2MDA5MDY5NjMxNjI1MjA2MzExMTUyMzAwNTg1MDY1NTk=#";
    private static final String SAMPLE_LINE_WITH_OTHER_ENC_VOTE_OPT_IDS_VALUE = UUID +
        COMMA + AUTH_TOKEN + COMMA + AUTH_TOKEN_ID + COMMA +
        OTHER_ENC_VOTE_OPT_IDS + COMMA + ENC_VOTE_SIG + COMMA +
        INTERNAL_AUTH_TOKEN_ID + COMMA + VOTE_TIMESTAMP + COMMA +
        VOTE_Z_K_PROOF_SIG + COMMA + VOTER_CERTIFICATE +
        ",200701.47.02.0000.000000.0001," + CONTEST_ID + COMMA + ELECTION_ID +
        COMMA + ELECTION_EVENT_ID + COMMA + VOTER_ID +
        ",CHANNEL_ID_UNCONTROLLED";
    private static final String SAMPLE_LINE_WITH_OTHER_VOTING_CONTEST_ID_VALUE = UUID +
        COMMA + AUTH_TOKEN + COMMA + AUTH_TOKEN_ID + COMMA + ENC_VOTE_OPT_IDS +
        COMMA + ENC_VOTE_SIG + COMMA + INTERNAL_AUTH_TOKEN_ID + COMMA +
        VOTE_TIMESTAMP + COMMA + VOTE_Z_K_PROOF_SIG + COMMA +
        VOTER_CERTIFICATE + ",200701.47.02.0000.000000.0001," + "9999" + COMMA +
        ELECTION_ID + COMMA + ELECTION_EVENT_ID + COMMA + VOTER_ID +
        ",CHANNEL_ID_UNCONTROLLED";
    private static final String SAMPLE_LINE_WITH_OTHER_ELECTION_ID_VALUE = UUID +
        COMMA + AUTH_TOKEN + COMMA + AUTH_TOKEN_ID + COMMA + ENC_VOTE_OPT_IDS +
        COMMA + ENC_VOTE_SIG + COMMA + INTERNAL_AUTH_TOKEN_ID + COMMA +
        VOTE_TIMESTAMP + COMMA + VOTE_Z_K_PROOF_SIG + COMMA +
        VOTER_CERTIFICATE + ",200701.47.02.0000.000000.0001," + CONTEST_ID +
        COMMA + "9999" + COMMA + ELECTION_EVENT_ID + COMMA + VOTER_ID +
        ",CHANNEL_ID_UNCONTROLLED";
    private static final String SAMPLE_LINE_WITH_OTHER_ELECTION_EVENT_ID_VALUE = UUID +
        COMMA + AUTH_TOKEN + COMMA + AUTH_TOKEN_ID + COMMA + ENC_VOTE_OPT_IDS +
        COMMA + ENC_VOTE_SIG + COMMA + INTERNAL_AUTH_TOKEN_ID + COMMA +
        VOTE_TIMESTAMP + COMMA + VOTE_Z_K_PROOF_SIG + COMMA +
        VOTER_CERTIFICATE + ",200701.47.02.0000.000000.0001," + CONTEST_ID +
        COMMA + ELECTION_ID + COMMA + "9999" + COMMA + VOTER_ID +
        ",CHANNEL_ID_UNCONTROLLED";
    private static final BigInteger MODULUS = new BigInteger(
            "30953935016171929405181725048691475597165054658172086800611741385717085886966135022787053043294599719402052783457906554840050466598200845836350069464569830849652328849164597015834019636250184391187039519241529509539396137383783691026385997868581485251353115862362707856496254648707792083733847740839833577843038160760489606588067058523761002425294322414298639802035594840360412346667825330259855947401569537064580849961903216800408490338672611947294048038395112383055004376963978967260637379317563369771664058743286447728833162866458048271828606452285839103402380751993665831120012178542555391431510173573250387144139");
    private VcsEncryptedVotesHashMap map;
    private ResultsList results;

    /**
     * Creates a RcgVotingReceiptsHashMap for the tests.
     */
    @BeforeMethod(alwaysRun = true)
    public void createVcsEncryptedVotesHashMap() {
        map = new VcsEncryptedVotesHashMap(MODULUS);
    }

    /**
     * Creates a results list for the tests.
     */
    @BeforeMethod(alwaysRun = true)
    public void createResultsList() {
        results = new ResultsArrayList();
    }

    /**
     * Verifies that the map is empty by default.
     */
    @Test
    public void mustBeEmptyByDefault() {
        assertTrue(map.isEmpty());
    }

    /**
     * Verifies that the modulus is set correctly by the constructor.
     */
    @Test
    public void constructorSetsModulusCorrectly() {
        assertEquals(map.getModulus(), MODULUS);
    }

    /**
     * Adding must not create an incident if the VCS encrypted vote to be added didn't already exist in the map.
     */
    @Test
    public void mustNotCreateAnIncidentWhenTryingToAddANewVcsEncryptedVote() {
        map.addVcsEncryptedVoteOrAddIncident(SAMPLE_LINE, results);

        assertTrue(results.isEmpty());
    }

    /**
     * Adding a broken line should create an incident.
     */
    @Test
    public void mustCreateAnIncidentWhenTryingToAddABrokenLine() {
        map.addVcsEncryptedVoteOrAddIncident(BROKEN_LINE, results);
        assertTrue(results.contains(
                new VcsEncryptedVoteBrokenLineIncident(BROKEN_LINE)));
    }

    /**
     * Adding must not create an incident if the encrypted voting option IDs value is different.
     */
    @Test
    public void mustNotCreateAnIncidentWhenTryingToAddAVcsEncryptedVoteWithADifferentEncVoteOptIdsValue() {
        map.addVcsEncryptedVoteOrAddIncident(SAMPLE_LINE, results);
        map.addVcsEncryptedVoteOrAddIncident(SAMPLE_LINE_WITH_OTHER_ENC_VOTE_OPT_IDS_VALUE,
            results);
        assertTrue(results.isEmpty());
    }

    /**
     * Adding must not create an incident if the contest ID is different.
     */
    @Test
    public void mustNotCreateAnIncidentWhenTryingToAddAVcsEncryptedVoteWithADifferentContestId() {
        map.addVcsEncryptedVoteOrAddIncident(SAMPLE_LINE, results);
        map.addVcsEncryptedVoteOrAddIncident(SAMPLE_LINE_WITH_OTHER_VOTING_CONTEST_ID_VALUE,
            results);

        assertTrue(results.isEmpty());
    }

    /**
     * Adding must not create an incident if the election ID is different.
     */
    @Test
    public void mustNotCreateAnIncidentWhenTryingToAddAVcsEncryptedVoteWithADifferentElectionId() {
        map.addVcsEncryptedVoteOrAddIncident(SAMPLE_LINE, results);
        map.addVcsEncryptedVoteOrAddIncident(SAMPLE_LINE_WITH_OTHER_ELECTION_ID_VALUE,
            results);

        assertTrue(results.isEmpty());
    }

    /**
     * Adding must not create an incident if the election event ID is different.
     */
    @Test
    public void mustNotCreateAnIncidentWhenTryingToAddAVcsEncryptedVoteWithADifferentElectionEventId() {
        map.addVcsEncryptedVoteOrAddIncident(SAMPLE_LINE, results);
        map.addVcsEncryptedVoteOrAddIncident(SAMPLE_LINE_WITH_OTHER_ELECTION_EVENT_ID_VALUE,
            results);

        assertTrue(results.isEmpty());
    }
}
