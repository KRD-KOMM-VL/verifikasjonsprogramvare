/**
 * Zero-Knowledge Protocols for E-Vote (ZKPEV).
 *
 * Copyright Â© 2013, The Norwegian Ministry of Local Government and Regional
 * Development (KRD).
 *
 * This file is part of ZKPEV.
 *
 * ZKPEV is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * ZKPEV is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You can find a copy of the GNU General Public License in
 * /src/site/resources/gpl-3.0-standalone.html. Otherwise, see also
 * http://www.gnu.org/licenses/.
 */
package com.computas.zkpev2013.decryption;

import static com.computas.zkpev2013.ZkpFunctionalTestAssertions.assertZkpContainsIncident;
import static com.computas.zkpev2013.ZkpFunctionalTestAssertions.assertZkpDoesNotContainIncident;

import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import java.io.IOException;

import java.security.NoSuchAlgorithmException;


/**
 * Functional tests against the NizkpDecryption class.
 */
public class NizkpDecryptionFunctionalTestOptimizationLine {
    private static final String DECRYPTION_FILE_NAME = "NizkpDecryption2013FunctionalTestDecryptionFileOptimization.csv";
    private static final String ELGAMAL_PROPERTIES_FILE_NAME = "NizkpDecryption2013FunctionalTestElGamalPropertiesOptimization.properties";
    private static final String ELGAMAL_PUBLIC_KEYS_FILE_NAME = "NizkpDecryption2013FunctionalTestElGamalPublicKeysOptimization.properties";
    private static final String MIXING_TYPE_NAME = "SCYTL";
    private static final String DECRYPTION_LINE_WITH_CORRECT_PROOF = "730001,01,000018,AMll50UK9cDPxfc4j9iKWhCHHlb/3MJopRYZnijq7/TVrA5X+VMJHLiOCtLicQEd1HDVZNDlNIWF#n#JiyFiW28a97aooypOzoXDFiKWfWcSKxOYFc4ZfbaNyBoXCjTtojT/oN8el7zG/GfxLB9fZs0lYjF#n#Fp7D/qwG55iM+uJnqT9FITL6o53+1DvwlKm5iaTUtZIzaYC0vkgbqhb10oCY10rVrodx9wkdgoYM#n#LYPyyG1VTNE84IyvkPdPNexZD6wNzf5HRilxKwtIMUb7+jkCCzX6WZpR/6w6WG/U7dtdzVSNdKXj#n#JHL2k1ZgDRvI6Lv8ozfe1+BuyZ+0Zqr7Ab9xc18=#AKFAdhlux2fgdxSr7tCZIKGZG5a6lqvV3jQc7alWQYr2Ql39gxqF+3mvRj/odXd3oanYEBzAVe57#n#x76N/EunGRyTiGqEW5E85EOC+D3fm3wJwYK287ZcEBW0u4pwJs77CUdPc6Uyt/TQYH97F6kBATaZ#n#JWuZ1EHpFB1RYfnV58K8i6wr0Jv5P/aBKxcumKzo+PxudWMEybHjS8R+nBTGtevzDwn3x0tYuytO#n#CJWWPeq84yrRGnDe67ewLNo0h1JHxtzoF/PCq6j3SEhlibc5v2DRUJclCwA7QNBPCYkPmaPP2VgR#n#5NQBBoisHXiLtPza3Ijkc/dyGkSGAlO5d6BeNXA=#,25878792566670842099842137716422866466252991028815773139028451679515364679624923581358662655689289205766441980239548823737806954397019411202244121935752456749381769565031670387914863935577896116425654849306598185507995737892509839616944496073707445338806101425467388977937489020456783676102620561970644684015868766028080049372849872115052208214439472603355483095640041515460851475971118272125133224007949688443680429668091313474118875081620746919907567682398209044343652147328622866834600839878114285018818463110227111614032671442085465843940709084719667865761125514800243342061732684028802646193202210299179139410606,MjU4Nzg3OTI1NjY2NzA4NDIwOTk4NDIxMzc3MTY0MjI4NjY0NjYyNTI5OTEwMjg4MTU3NzMxMzkwMjg0NTE2Nzk1MTUzNjQ2Nzk2MjQ5MjM1ODEzNTg2NjI2NTU2ODkyODkyMDU3NjY0NDE5ODAyMzk1NDg4MjM3Mzc4MDY5NTQzOTcwMTk0MTEyMDIyNDQxMjE5MzU3NTI0NTY3NDkzODE3Njk1NjUwMzE2NzAzODc5MTQ4NjM5MzU1Nzc4OTYxMTY0MjU2NTQ4NDkzMDY1OTgxODU1MDc5OTU3Mzc4OTI1MDk4Mzk2MTY5NDQ0OTYwNzM3MDc0NDUzMzg4MDYxMDE0MjU0NjczODg5Nzc5Mzc0ODkwMjA0NTY3ODM2NzYxMDI2MjA1NjE5NzA2NDQ2ODQwMTU4Njg3NjYwMjgwODAwNDkzNzI4NDk4NzIxMTUwNTIyMDgyMTQ0Mzk0NzI2MDMzNTU0ODMwOTU2NDAwNDE1MTU0NjA4NTE0NzU5NzExMTgyNzIxMjUxMzMyMjQwMDc5NDk2ODg0NDM2ODA0Mjk2NjgwOTEzMTM0NzQxMTg4NzUwODE2MjA3NDY5MTk5MDc1Njc2ODIzOTgyMDkwNDQzNDM2NTIxNDczMjg2MjI4NjY4MzQ2MDA4Mzk4NzgxMTQyODUwMTg4MTg0NjMxMTAyMjcxMTE2MTQwMzI2NzE0NDIwODU0NjU4NDM4OTc4MDI2MDYzMjEwODQwNDg0NDI1MjU2NzA3MDU1NDQ1MTc3MTc2MDEwNDE2ODA4OTIyNzMwMjU0NTc4MDg2MDUxNzA0ODcxNDQ1ODF8LTEwMzQxODYwNjkyODU2MTE0MDY4MDM4OTEzNTQzMTEyMzUyOTE0ODA4MjUzMzI1MjM1OTk2MTc3NzU1MTY0ODU5OTY1ODQ2MDQ4ODUxNDkwNTY3MTk0NTYwODYzOTk0NDU0ODU4NTY4OTAyMzgwNTYzMjU1NDc4NzI4NTgxOTUzMTE4NDE3ODYxMjk3NzIzMDI0NTQzNDg2ODAxNzk4OTA1NTM3Mzc3OTc1Njc1NDE4ODg3ODQ3Mzk1MTYzOTgxMjk3NTY5NTU3NzU4NTcwNjM4NTEwNzU3NjI3MTI1ODQ4MTgyMTU2NDM3NTUxODIyNjI1OTc3NDgwOTE5OTcwMDQ0ODY2Mzc0NzA0NjY0ODA2ODk4MzQxNzI2NDQ3NTg2MzA1NDgwMjE5NDg2MDgxMzM2NzUyNjA3NzQyNzQzMzU4NDg0NTk0NzIwNjYwMDg1NTc5MTEzOTk5NTM4NDQ1NTA2NDY5ODU0MTM1MjY1MTE4Mjg5Mjc5OTQwMzI3NjkxODg5NzYwNjU3NDU3NDgwODY4NTM4OTUyNjk1MTkxMTc1ODExMzE4NTMzNjE1NjE3MzYzNjg4OTEzMzAzOTE0MDc2NDIyMzAxNzQ4MzI1OTIzNzk0Njg4NzQ2MDQ1NzQ2NjgzOTEwMTE5OTA5NzYzODczODEyMjI0NTQzNzU3NDcwODQ5ODIzNjE0ODAyMjU0NTk1MDE3MzkzNzU3NjYwNTg1NDY3MjE1OTE2NjM4MTY0MDA2NTE3MDQ2NTMxMDQ3NzE0NDc0ODcxNDc0NjM0MzE5ODcyOTU0Mjg2OTU2MDE2NDcyMTA4NTYzNjQ5MjQwOTE1Mjk0OTUzNTM1Mzk0MTQwNTg2NjU3MzI4MzU0OTgzNzUzMjE4MDAwMjIwNTIxMjcyMTEyNDY4ODY3MTMxMTY1ODM2MDU3NDc3OTc2NTYzNjQyNjIwMzYzMzEzNTQwNjEzMzE3NDgwNTQxNjUwNzQzMTU3Nzg5NTY3Njg0OTgyOTQzODE2Nzc3NDUzNTEzNjU3ODM3NzQzMDQ0NDg2ODY3MDk5OTY1MjE3NDc2NzczMDk3ODQ3ODU3MjcxNjA1NzYzMjU1MjI2NDMxODI2NTgyMjQyMzQ1NzQxMDEzMzc0NzkwMTc4NjY1NTc3Nzg2NzEwNzA0MjcwNTQxOTM4MzI3NTI0NTE1MDUxOTEyMTI3MzY5NTA3NzM0MjQyOTcwOTU2NDc0NzI1MzA2OTcxNjE1NDY3ODc0MjEyNDQzOTE3NjczODkwMjQwMTA1ODAxMjc3MjY4ODY5NTg1MjIwNzQ3Mzk2MDU0OTUzODE5Mjg0MjkxMTA5NjM1OTgyMjM0MTgzNDk5NTE3NTU4MzEwMDE2OTMyNTI5MjgwNDc2NDM5NDUyNTQxMDIyNjk4NjMzNjAxMjYwNTM4ODQxMDYxMDg4NTUwMjcwNDY1MTk1MDg3MDA2ODIzMzI1OTUwMDU0MjMwODgyNzgwNTA3MTUyODQwNjI5MzQ3MDM5MjI3ODIwMTI4NzYzOTA5MDc3NDI2MzQ4NjU5NDY3MTU2NzE2NjcwMDY4MTI0ODk5MTgzOTEyMDYyNzc1ODAzNDY1NTc2NzAxNjIzMzQwMDQ5NzIzNDU4OTg3ODU1MjY2NzY5MjY1OXxudWxs";
    private static final String DECRYPTION_LINE_WITH_INCORRECT_PROOF = "730001,01,000018,aAMll50UK9cDPxfc4j9iKWhCHHlb/3MJopRYZnijq7/TVrA5X+VMJHLiOCtLicQEd1HDVZNDlNIWF#n#JiyFiW28a97aooypOzoXDFiKWfWcSKxOYFc4ZfbaNyBoXCjTtojT/oN8el7zG/GfxLB9fZs0lYjF#n#Fp7D/qwG55iM+uJnqT9FITL6o53+1DvwlKm5iaTUtZIzaYC0vkgbqhb10oCY10rVrodx9wkdgoYM#n#LYPyyG1VTNE84IyvkPdPNexZD6wNzf5HRilxKwtIMUb7+jkCCzX6WZpR/6w6WG/U7dtdzVSNdKXj#n#JHL2k1ZgDRvI6Lv8ozfe1+BuyZ+0Zqr7Ab9xc18=#AKFAdhlux2fgdxSr7tCZIKGZG5a6lqvV3jQc7alWQYr2Ql39gxqF+3mvRj/odXd3oanYEBzAVe57#n#x76N/EunGRyTiGqEW5E85EOC+D3fm3wJwYK287ZcEBW0u4pwJs77CUdPc6Uyt/TQYH97F6kBATaZ#n#JWuZ1EHpFB1RYfnV58K8i6wr0Jv5P/aBKxcumKzo+PxudWMEybHjS8R+nBTGtevzDwn3x0tYuytO#n#CJWWPeq84yrRGnDe67ewLNo0h1JHxtzoF/PCq6j3SEhlibc5v2DRUJclCwA7QNBPCYkPmaPP2VgR#n#5NQBBoisHXiLtPza3Ijkc/dyGkSGAlO5d6BeNXA=#,25878792566670842099842137716422866466252991028815773139028451679515364679624923581358662655689289205766441980239548823737806954397019411202244121935752456749381769565031670387914863935577896116425654849306598185507995737892509839616944496073707445338806101425467388977937489020456783676102620561970644684015868766028080049372849872115052208214439472603355483095640041515460851475971118272125133224007949688443680429668091313474118875081620746919907567682398209044343652147328622866834600839878114285018818463110227111614032671442085465843940709084719667865761125514800243342061732684028802646193202210299179139410606,MjU4Nzg3OTI1NjY2NzA4NDIwOTk4NDIxMzc3MTY0MjI4NjY0NjYyNTI5OTEwMjg4MTU3NzMxMzkwMjg0NTE2Nzk1MTUzNjQ2Nzk2MjQ5MjM1ODEzNTg2NjI2NTU2ODkyODkyMDU3NjY0NDE5ODAyMzk1NDg4MjM3Mzc4MDY5NTQzOTcwMTk0MTEyMDIyNDQxMjE5MzU3NTI0NTY3NDkzODE3Njk1NjUwMzE2NzAzODc5MTQ4NjM5MzU1Nzc4OTYxMTY0MjU2NTQ4NDkzMDY1OTgxODU1MDc5OTU3Mzc4OTI1MDk4Mzk2MTY5NDQ0OTYwNzM3MDc0NDUzMzg4MDYxMDE0MjU0NjczODg5Nzc5Mzc0ODkwMjA0NTY3ODM2NzYxMDI2MjA1NjE5NzA2NDQ2ODQwMTU4Njg3NjYwMjgwODAwNDkzNzI4NDk4NzIxMTUwNTIyMDgyMTQ0Mzk0NzI2MDMzNTU0ODMwOTU2NDAwNDE1MTU0NjA4NTE0NzU5NzExMTgyNzIxMjUxMzMyMjQwMDc5NDk2ODg0NDM2ODA0Mjk2NjgwOTEzMTM0NzQxMTg4NzUwODE2MjA3NDY5MTk5MDc1Njc2ODIzOTgyMDkwNDQzNDM2NTIxNDczMjg2MjI4NjY4MzQ2MDA4Mzk4NzgxMTQyODUwMTg4MTg0NjMxMTAyMjcxMTE2MTQwMzI2NzE0NDIwODU0NjU4NDM4OTc4MDI2MDYzMjEwODQwNDg0NDI1MjU2NzA3MDU1NDQ1MTc3MTc2MDEwNDE2ODA4OTIyNzMwMjU0NTc4MDg2MDUxNzA0ODcxNDQ1ODF8LTEwMzQxODYwNjkyODU2MTE0MDY4MDM4OTEzNTQzMTEyMzUyOTE0ODA4MjUzMzI1MjM1OTk2MTc3NzU1MTY0ODU5OTY1ODQ2MDQ4ODUxNDkwNTY3MTk0NTYwODYzOTk0NDU0ODU4NTY4OTAyMzgwNTYzMjU1NDc4NzI4NTgxOTUzMTE4NDE3ODYxMjk3NzIzMDI0NTQzNDg2ODAxNzk4OTA1NTM3Mzc3OTc1Njc1NDE4ODg3ODQ3Mzk1MTYzOTgxMjk3NTY5NTU3NzU4NTcwNjM4NTEwNzU3NjI3MTI1ODQ4MTgyMTU2NDM3NTUxODIyNjI1OTc3NDgwOTE5OTcwMDQ0ODY2Mzc0NzA0NjY0ODA2ODk4MzQxNzI2NDQ3NTg2MzA1NDgwMjE5NDg2MDgxMzM2NzUyNjA3NzQyNzQzMzU4NDg0NTk0NzIwNjYwMDg1NTc5MTEzOTk5NTM4NDQ1NTA2NDY5ODU0MTM1MjY1MTE4Mjg5Mjc5OTQwMzI3NjkxODg5NzYwNjU3NDU3NDgwODY4NTM4OTUyNjk1MTkxMTc1ODExMzE4NTMzNjE1NjE3MzYzNjg4OTEzMzAzOTE0MDc2NDIyMzAxNzQ4MzI1OTIzNzk0Njg4NzQ2MDQ1NzQ2NjgzOTEwMTE5OTA5NzYzODczODEyMjI0NTQzNzU3NDcwODQ5ODIzNjE0ODAyMjU0NTk1MDE3MzkzNzU3NjYwNTg1NDY3MjE1OTE2NjM4MTY0MDA2NTE3MDQ2NTMxMDQ3NzE0NDc0ODcxNDc0NjM0MzE5ODcyOTU0Mjg2OTU2MDE2NDcyMTA4NTYzNjQ5MjQwOTE1Mjk0OTUzNTM1Mzk0MTQwNTg2NjU3MzI4MzU0OTgzNzUzMjE4MDAwMjIwNTIxMjcyMTEyNDY4ODY3MTMxMTY1ODM2MDU3NDc3OTc2NTYzNjQyNjIwMzYzMzEzNTQwNjEzMzE3NDgwNTQxNjUwNzQzMTU3Nzg5NTY3Njg0OTgyOTQzODE2Nzc3NDUzNTEzNjU3ODM3NzQzMDQ0NDg2ODY3MDk5OTY1MjE3NDc2NzczMDk3ODQ3ODU3MjcxNjA1NzYzMjU1MjI2NDMxODI2NTgyMjQyMzQ1NzQxMDEzMzc0NzkwMTc4NjY1NTc3Nzg2NzEwNzA0MjcwNTQxOTM4MzI3NTI0NTE1MDUxOTEyMTI3MzY5NTA3NzM0MjQyOTcwOTU2NDc0NzI1MzA2OTcxNjE1NDY3ODc0MjEyNDQzOTE3NjczODkwMjQwMTA1ODAxMjc3MjY4ODY5NTg1MjIwNzQ3Mzk2MDU0OTUzODE5Mjg0MjkxMTA5NjM1OTgyMjM0MTgzNDk5NTE3NTU4MzEwMDE2OTMyNTI5MjgwNDc2NDM5NDUyNTQxMDIyNjk4NjMzNjAxMjYwNTM4ODQxMDYxMDg4NTUwMjcwNDY1MTk1MDg3MDA2ODIzMzI1OTUwMDU0MjMwODgyNzgwNTA3MTUyODQwNjI5MzQ3MDM5MjI3ODIwMTI4NzYzOTA5MDc3NDI2MzQ4NjU5NDY3MTU2NzE2NjcwMDY4MTI0ODk5MTgzOTEyMDYyNzc1ODAzNDY1NTc2NzAxNjIzMzQwMDQ5NzIzNDU4OTg3ODU1MjY2NzY5MjY1OXxudWxs";
    private static final String BROKEN_DECRYPTION_LINE = "*";
    private NizkpDecryption nizkp;

    /**
     * Creates a NizkpCounting object, loads the files with the ElGamal properties,
     * the ElGamal public key and the decryption file, and runs the protocol.
     * @throws java.io.IOException Thrown if something goes wrong during IO.
     * @throws java.security.NoSuchAlgorithmException Should not be thrown.
     */
    @BeforeMethod
    public void createNizkpLoadDataFilesAndRun()
        throws IOException, NoSuchAlgorithmException {
        nizkp = new NizkpDecryption(new String[] {
                    ELGAMAL_PROPERTIES_FILE_NAME, ELGAMAL_PUBLIC_KEYS_FILE_NAME,
                    MIXING_TYPE_NAME, DECRYPTION_FILE_NAME
                });
        nizkp.run();
    }

    /**
     * Verifies that the NIZKP produced an incident about the broken line
     * in the decryption file.
     */
    @Test
    public void resultsMustContainBrokenLineIncident() {
        assertZkpContainsIncident(nizkp,
            new DecryptionFileBrokenLineIncident(BROKEN_DECRYPTION_LINE));
    }

    /**
     * Verifies that the NIZKP produced an incident for the line that contained
     * an incorrect proof.
     */
    @Test
    public void resultsMustContainIncorrectProofIncident() {
        assertZkpContainsIncident(nizkp,
            new DecryptionLineWithIncorrectProofIncident(
                new ScytlDecryptionLine(DECRYPTION_LINE_WITH_INCORRECT_PROOF)));
    }

    /**
     * Verifies that the NIZKP didn't produce an incident for the line that
     * contained a correct proof.
     */
    @Test
    public void resultsMustNotContainIncidentAboutCorrectProof() {
        assertZkpDoesNotContainIncident(nizkp,
            new DecryptionLineWithIncorrectProofIncident(
                new ScytlDecryptionLine(DECRYPTION_LINE_WITH_CORRECT_PROOF)));
    }
}
