~~ Zero-Knowledge Protocols for E-Vote (ZKPEV).
~~
~~ Copyright Â© 2013, The Norwegian Ministry of Local Government and Regional
~~ Development (KRD).
~~
~~ This file is part of ZKPEV.
~~
~~ ZKPEV is free software: you can redistribute it and/or modify it under the
~~ terms of the GNU General Public License as published by the Free Software
~~ Foundation, either version 3 of the License, or (at your option) any later
~~ version.
~~
~~ ZKPEV is distributed in the hope that it will be useful, but WITHOUT ANY
~~ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
~~ A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
~~   
~~ You can find a copy of the GNU General Public License in
~~ /src/site/resources/gpl-3.0-standalone.html. Otherwise, see also
~~ http://www.gnu.org/licenses/.


Introduction

  This software component performs the zero-knowledge protocols for the
  Norwegian E-Vote 2013 project. In particular, it performs three proofs using
  so-called zero-knowledge protocols, marked in orange in the figure below. Due
  to a problem with the ballot boxes, a fourth proof, the cleansing, was left
  out.
  
[images/Overview.png] Overview

  The first proof, called <<NIZKP RCG-VCS>>, verifies the identity of the hashes
  generated by the Return Code Generator (RCG) with the hashes to be calculated
  from the votes stored by the Vote Collector Server (VCS). The identity proofs
  that the VCS hasn't removed any votes that the RCG has registered, and that
  the RCG hasn't accepted any votes it should have rejected. This proof is
  non-interactive, and can therefore be run over a set of CSV files: a set
  of files each containing the encrypted votes, and a set of files each
  containing the hashes. See {{{./NIZKP_RCG-VCS.html}NIZKP RCG-VCS}} for more
  information about this proof.
  
  The second proof, called <<NIZKP Cleansing>>, would have verified that the 
  result of the cleansing services doesn't contain any votes that weren't
  registered in the Vote Collector Server (VCS). However, due to the poor
  encryption of part of the votes, it was decided that parallell cleansing was
  to be used in 2013.
  
  The third proof, called <<IZKP Mixing>>, checks the Schnorr signature based
  zero-knowledge proofs on the mix-nodes. This proof demonstrates that the
  mix-node has decrypted and encrypted groups of votes it has received as input
  correctly. This proof is interactive, and requires communication with the
  databases of the mix-nodes. See {{{./IZKP_Mixing.html}IZKP Mixing}} for more
  information about this proof.

  Notice however that this proof was used during the verification of the 2013
  elections. Instead, a verifier for the Verificatum mixing was used. See 
  the <<CPPVV>> documenation for more information about the verification of 
  Verificatum.

  The fourth proof, called <<NIZKP Decryption>>, checks the Schnorr signature
  based zero-knowledge proofs on
  each of the votes decrypted by the Electoral Board. This proof demonstrates
  that the correct private key has been used to decrypt the votes. This proof
  is non-interactive, and can therefore be run over a CSV file extracted from
  the Counting server database containing both encrypted votes, decrypted votes
  and their zero-knowledge proofs. See {{{./NIZKP_Decryption.html}NIZKP Decryption}}
  for more information about this proof.