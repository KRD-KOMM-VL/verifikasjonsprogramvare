<?xml version="1.0" encoding="UTF-8"?>
<!-- Zero-Knowledge Protocols for E-Vote (ZKPEV)

     Copyright Â© 2013, The Norwegian Ministry of Local Government and Regional
     Development (KRD)

     This file is part of ZKPEV.

     ZKPEV is free software: you can redistribute it and/or modify it under the
     terms of the GNU General Public License as published by the Free Software
     Foundation, either version 3 of the License, or (at your option) any later
     version.

     ZKPEV is distributed in the hope that it will be useful, but WITHOUT ANY
     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
     details.
     
     You can find a copy of the GNU General Public License in
     /src/site/resources/gpl-3.0-standalone.html. Otherwise, see also
     http://www.gnu.org/licenses/. -->
<ruleset name="Custom PMD ruleset for RiCX" xmlns="http://pmd.sf.net/ruleset/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd" xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">
  <description>
    This is the custom PMD ruleset for ZKPEV.
  </description>
  <rule ref="rulesets/java/basic.xml"/>
  <rule ref="rulesets/java/braces.xml"/>
  <rule ref="rulesets/java/codesize.xml">
    <!-- The rule TooManyMethods is configured explicitly below -->
    <exclude name="TooManyMethods"/>
  </rule>
  <rule ref="rulesets/java/codesize.xml/TooManyMethods">
    <properties>
      <!-- The default value of the property maxmethods is 10 -->
      <property name="maxmethods" value="20"/>
    </properties>
  </rule>
  <rule ref="rulesets/java/clone.xml"/>
  <rule ref="rulesets/java/controversial.xml/AssignmentInOperand"/>
  <rule ref="rulesets/java/controversial.xml/DontImportSun"/>
  <rule ref="rulesets/java/design.xml"/>
  <rule ref="rulesets/java/imports.xml"/>
  <rule ref="rulesets/java/logging-java.xml"/>
  <rule ref="rulesets/java/naming.xml/AvoidDollarSigns"/>
  <rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingMethodName"/>
  <rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingTypeName"/>
  <rule ref="rulesets/java/naming.xml/BooleanGetMethodName"/>
  <rule ref="rulesets/java/naming.xml/ClassNamingConventions"/>
  <rule ref="rulesets/java/naming.xml/MethodNamingConventions"/>
  <rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass"/>
  <rule ref="rulesets/java/naming.xml/NoPackage"/>
  <rule ref="rulesets/java/naming.xml/PackageCase"/>
  <rule ref="rulesets/java/naming.xml/ShortMethodName"/>
  <rule ref="rulesets/java/naming.xml/SuspiciousConstantFieldName"/>
  <rule ref="rulesets/java/naming.xml/SuspiciousEqualsMethodName"/>
  <rule ref="rulesets/java/naming.xml/SuspiciousHashcodeMethodName"/>
  <rule ref="rulesets/java/naming.xml/VariableNamingConventions"/>
  <rule ref="rulesets/java/optimizations.xml/AddEmptyString"/>
  <rule ref="rulesets/java/optimizations.xml/AvoidArrayLoops"/>
  <rule ref="rulesets/java/optimizations.xml/SimplifyStartsWith"/>
  <rule ref="rulesets/java/optimizations.xml/UnnecessaryWrapperObjectCreation"/>
  <rule ref="rulesets/java/optimizations.xml/UseArrayListInsteadOfVector"/>
  <rule ref="rulesets/java/optimizations.xml/UseArraysAsList"/>
  <rule ref="rulesets/java/optimizations.xml/UseStringBufferForStringAppends"/>
  <rule ref="rulesets/java/strings.xml">
    <!-- The rule AvoidDuplicateLiterals is already handled by Checkstyle's MultipleStringLiterals check -->
    <exclude name="AvoidDuplicateLiterals"/>
  </rule>
  <rule ref="rulesets/java/unusedcode.xml"/>
</ruleset>